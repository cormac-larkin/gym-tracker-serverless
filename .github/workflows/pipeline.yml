name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  set_project_list: # Creates a list of all subdirectories beginning with 'lambda-'. This list is used for subsequent job matrices
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.set_outputs.outputs.projects }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find lambda projects
        id: set_outputs
        run: |
          projects=$(find . -maxdepth 1 -type d -name 'lambda-*' | sed 's|./||' | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "Found projects: $projects"
          echo "::set-output name=projects::$projects"

  build:
    runs-on: ubuntu-latest
    needs: set_project_list
    strategy:
      matrix:
        project: ${{ fromJson(needs.set_project_list.outputs.projects) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          cd ${{ matrix.project }}
          npm install

  unit_test:
    runs-on: ubuntu-latest
    needs: [set_project_list, build]
    strategy:
      matrix:
        project: ${{ fromJson(needs.set_project_list.outputs.projects) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          cd ${{ matrix.project }}
          npm install

      - name: Run unit tests
        run: |
          cd ${{ matrix.project }}
          npm test

  deploy:
    runs-on: ubuntu-latest
    needs: [set_project_list, unit_test]
    strategy:
      matrix:
        project: ${{ fromJson(needs.set_project_list.outputs.projects) }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies and build
        run: |
          cd ${{ matrix.project }}
          npm install
          npm run build
          cd ..

      - name: Create lambda zipfile
        run: |
          cd ${{ matrix.project }}
          cp -r ./node_modules ./temp
          cp -r ./build/src/. ./temp
          cd ./temp
          zip -r ../function.zip .

      - name: Upload zipfile to S3 bucket
        run: |
          cd ${{ matrix.project }}
          aws s3 cp function.zip s3://${{ matrix.project }})/function.zip

      - name: Update lambda function
        run: |
          cd ${{ matrix.project }}
          aws lambda update-function-code --function-name ${{ matrix.project }} --s3-bucket ${{ matrix.project }} --s3-key "function.zip"
