name: Deploy Lambda Functions

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install dependencies and build lambdas
        run: |
          for dir in ./lambda*; do
            if [ -d "$dir" ]; then
            echo "\n*** Installing dependencies and building '$dir' ***\n"
              cd "$dir"
              npm install
              npm run build
              cd ..
            fi
          done

  unit-test:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install test dependencies
        run: npm i typescript jest ts-node

      - name: Run unit tests
        run: |
          for dir in ./lambda*; do
            if [ -d "$dir" ]; then
            echo "\n*** Running unit tests for '$dir'\n***"
              cd "$dir"
              npm run test
              cd ..
            fi
          done

  deploy:
    runs-on: ubuntu-latest

    needs: unit-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install dependencies and build lambdas
        run: |
          for dir in ./lambda*; do
            if [ -d "$dir" ]; then
              cd "$dir"
              npm install
              npm run build
              cd ..
            fi
          done

      - name: Zip lambda functions
        run: |
          for dir in ./lambda*; do
            if [ -d "$dir" ]; then
              echo "\n*** Zipping '$dir' ***\n"
              mkdir -p "$dir/tmp"
              cp -r "$dir/node_modules" "$dir/tmp"
              cp -r "$dir/build/src/." "$dir/tmp"
              cd "$dir/tmp"
              zip -r ../function.zip .
              cd ../..
              rm -rf "$dir/tmp"
            fi
          done

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Upload to S3
        run: |
          for dir in ./lambda*; do
            if [ -f "$dir/function.zip" ]; then
              echo "\n*** Uploading zip for '$dir' to S3 bucket ***\n"
              aws s3 cp "$dir/function.zip" "s3://$(basename $dir)/function.zip"
            fi
          done

      - name: Update Lambda functions
        run: |
          for dir in ./lambda*; do
            if [ -f "$dir/function.zip" ]; then
              echo "\n*** Updating function '$dir' ***\n"
              FUNCTION_NAME=$(basename $dir)
              aws lambda update-function-code --function-name $(basename $dir) --s3-bucket $(basename $dir) --s3-key "function.zip"
            fi
          done
